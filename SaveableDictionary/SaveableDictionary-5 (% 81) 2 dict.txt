
package dictionary;


import java.io.File;
import java.io.PrintWriter;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Scanner;
import java.util.Set;

public class SaveableDictionary {

    private HashMap<String, String> dict = new HashMap<>();
    private String file;

    public SaveableDictionary() {
        this.dict = new HashMap<>();
    }

    public SaveableDictionary(String file) {
        this.file = file;
    }

    public boolean load() {
        try (Scanner scanner = new Scanner(new File(this.file))) {
            while (scanner.hasNext()) {
                String[] parts = scanner.nextLine().split(":");
                add(parts[0], parts[1]);
            }
        } catch (Exception e) {
            return false;
        }return true;
    }

    public boolean save() {
        /*
        Set<String> ss = dictR.keySet();
        System.out.println(ss);
        Iterator<String> key = ss.iterator();
        while ( key.hasNext() ) {
        for(String key : dict.keySet()){
            if (dictR.containsKey(dict.get(key))) {
                dict.remove(key);
            }
        }
                
        try (Scanner scanner = new Scanner(new File(this.file))) {
            while (scanner.hasNext()) {
                String[] parts = scanner.nextLine().split(":");
                String val = parts[1];
                for (String key : dict.keySet()) {
                    if (key.equals(val)) {
                        dict.remove(key);
                        dict.remove(val);
                        //dict.remove(value);
                    }
                }

            }
        } catch (Exception e) {
        }
        */
        HashMap<String, String> dictR = new HashMap<>();
        dictR = dict;

        try (PrintWriter writer = new PrintWriter(new File(file))) {
            for (String key : dict.keySet()) {
                if (key.equals(dictR.get(key))){
                    dict.remove(key);
                    dict.remove(dict.get(key));
                }
                writer.println(key + ":" + dict.get(key));
            }
            writer.close();  // ??????????????????
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    public void add(String words, String translation) {
        if (dict.isEmpty()){
            dict.put(words, translation);
            dict.put(translation, words);
        }else{
            if (dict.containsKey(words)) {
                return;
            } else {
                dict.put(words, translation);
                dict.put(translation, words);
            }
        }
    }

    public String translate(String word) {
        if (dict.containsKey(word)){
            return dict.get(word);
        }else{
            return null;
        }
    }

    public void delete(String word) {
        if (this.dict.containsKey(word)){
            String value=dict.get(word);
            dict.remove(word);
            dict.remove(value);
        }
    }

}
