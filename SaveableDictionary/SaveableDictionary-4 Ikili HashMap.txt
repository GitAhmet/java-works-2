
package dictionary;


import java.io.File;
import java.io.PrintWriter;
import java.util.HashMap;
import java.util.Scanner;

public class SaveableDictionary {

    private HashMap<String, String> dict;
    private HashMap<String, String> dictR;
    private String file;

    public SaveableDictionary() {
        this.dict = new HashMap<>();
    }

    public SaveableDictionary(String file) {
        this.file = file;
    }

    public boolean load() {
        try (Scanner scanner = new Scanner(new File(this.file))) {
            while (scanner.hasNext()) {
                String[] parts = scanner.nextLine().split(":");
                System.out.println("Check-5"); 
                dict.put(parts[0], parts[1]);
                dictR.put(parts[1], parts[0]);
            }
        } catch (Exception e) {
            return false;
        }return true;
    }

    public boolean save() {
        for (String key1 : dictR.keySet()){
            for(String key : dict.keySet()){
                if (dict.get(key).equals(key1)){
                    dict.remove(key);
                }
            }
        }
        try (PrintWriter writer = new PrintWriter(new File(file))) {
            for(String key : dict.keySet()){
                writer.println(key+":"+dict.get(key));
            }
            writer.close();
        } catch (Exception e) {
            return false;
        }return true;
    }
    
    public void add(String words, String translation) {
        System.out.println("Check-7");
            if (dict.containsKey(words) || dictR.containsKey(words)) {
                System.out.println("Check-1");
                return;
            } else {
                dict.put(words, translation);
                dictR.put(translation, words);
            }
    }
    
    public String translate(String word) {
        System.out.println("Check-1");
        if (dict.containsKey(word)){
            System.out.println("Check-2");
            return dict.get(word);
        }
        else if (dictR.containsKey(word)){
            System.out.println("Check-2");
            return dictR.get(word);
        }else{
            return null;
        }
    }
    
    public void delete(String word) {
        if (dict.containsKey(word)){
            dict.remove(word);
        }
        else if (dictR.containsKey(word)){
            dictR.remove(word);
        }
    }

}
