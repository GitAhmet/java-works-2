
package dictionary;

import java.io.File;
import java.io.PrintWriter;
import java.util.HashMap;
import java.util.Scanner;


public class SaveableDictionary {

    private HashMap<String, String> dict;
    private HashMap<String, String> dictR;
    private String file;
    
    public SaveableDictionary(){
        this.dict = new HashMap<>();
        this.dictR = new HashMap<>();
    }
    
    public SaveableDictionary(String file){
        this.file = file;
    }
    
    public boolean load() {
        try(Scanner fileReader = new Scanner(new File(this.file))){
            while (fileReader.hasNextLine()) {
            String line = fileReader.nextLine();
            String[] parts = line.split(":");   

            String key = parts[0];     
            String value = parts[1];     
            dict.put(key, value);
            dictR.put(key, value);
            }
        }catch (Exception e){
            return false;
        }return true;
    }
    
    public boolean save() {
        try (PrintWriter writer = new PrintWriter(file)) {
            for(String key : dict.keySet()){
                for(String value : dict.values()){
                    writer.println(key+":"+value);
                }
            }
            for (String key : dictR.keySet()) {
                for (String value : dictR.values()) {
                    writer.println(key + ":" + value);
                }
            }
            writer.close();
        } catch (Exception e) {
            return false;
        }
        return true;
    }
    
    public void add(String words, String translation){

        if (!(dict.containsKey(words))) {
            dict.put(words, translation);
        }
        if (!(dictR.containsKey(translation))) {
            dictR.put(translation, words);
        }

    }
    
    public String translate(String word){

        if (dict.containsKey(word)){
            return dict.get(word);
        }
        
        if (dictR.containsKey(word)){
            return dictR.get(word);
        }
        return null;
    }
    
    public void delete(String word){
        if (dict.containsKey(word)){
            dict.put(word, null);
        }
        if (dictR.containsKey(word)){
            dictR.put(word, null);
        }
    }
            
    
}
